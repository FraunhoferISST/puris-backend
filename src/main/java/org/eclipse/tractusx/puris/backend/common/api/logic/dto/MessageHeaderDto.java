/*
 * Copyright (c) 2023 Volkswagen AG
 * Copyright (c) 2023 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST)
 * Copyright (c) 2023 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.eclipse.tractusx.puris.backend.common.api.logic.dto;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.eclipse.tractusx.puris.backend.common.api.domain.model.Request;
import org.eclipse.tractusx.puris.backend.common.api.domain.model.Response;
import org.eclipse.tractusx.puris.backend.common.api.domain.model.datatype.DT_UseCaseEnum;

import java.util.Date;
import java.util.UUID;


/**
 * The MessageHeaderRepository is used as a Message of both, the {@link Request} and {@link Response},
 * together with the actual Message.
 */
@Entity
@Table(name = "MessageHeaderRepository")
@Getter
@Setter
@ToString
@NoArgsConstructor
public class MessageHeaderDto {

    @Id
    @GeneratedValue
    /**
     * This uuid  prevents the application from collision with external IDs, because the partner
     * creates the request when performing a Request API call.
     */
    private UUID uuid;

    /**
     * Request id generated by the requesting partner.
     * <p>
     * For the response api, the provider sets the id. For the request api, the consumer sets the
     * id.
     */
    @NotNull
    private UUID requestId;

    /**
     * EDC Asset Id set in a request api call to define which asset holds the response asset id.
     * <p>
     * Only set for the request api call.
     */
    private String respondAssetId;

    /**
     * Date and time at which the request has been performed.
     */
    @NotNull
    private Date creationDate;

    /**
     * EDC datamangement URL of the partner sending the request.
     */
    @NotNull
    private String senderEdc;

    /**
     * Business Partner Number in Catena-X identifying the partner sending the request.
     */
    @NotNull
    private String sender;

    /**
     * Business Partner Number in Catena-X identifying the partner receiving the request.
     */
    private String receiver;

    /**
     * Use case associated with the message.
     */
    @NotNull
    private DT_UseCaseEnum useCase;

    /**
     * Contract agreement id (pattern {contract definition id}:{uuid of agreement}) in edc.
     * <p>
     * This field should always be set to the REQUEST contractAgreementId - also, for the Response.
     * Reason is that the application can identify the associated policies for the actual service
     * usage and access to enforce them.
     */
    private String contractAgreementId;

}
